#!/bin/bash
# mnt v0.1

# Only list partitions (not disks) that are not:
#  - sda  (Windows)
#  - nvme (Linux)
#  - sdb  (Data)
options=( $(lsblk -ln -o name,type | grep -vE 'disk|sda|sdb|nvme0' | awk '{print $1}') )
len=${#options[@]}


# Color:
red()   { echo -ne "\e[31m${1}\e[0m" ;}
green() { echo -ne "\e[32m${1}\e[0m" ;}


mount_device()
{
   device=$(sed 's/ /_/g' <<< "$1")

   # If there's no dir with the name of the mount point,
   # create the directory, and mount the drive to it
   if [[ ! -d /mnt/$device ]] ; then
      sudo mkdir /mnt/$device && sudo mount /dev/$device /mnt/$device
   fi

   # If the dir exists, and something is already mounted to it,
   # Print warning and exit
   if [[ -d /mnt/$device ]] && [[ $(lsblk -o mountpoint | grep "/mnt/$device") ]] ; then
      red " ◆ " ; echo -e "Disk already mounted to /dev/$device."
      exit 3
   fi

   # If the dir exists, but is empty
   # Mount to it
   if [[ -d /mnt/$device ]] && [[ ! $(ls -A /mnt/$device) ]] ; then
      sudo bash -c "mount /dev/$device /mnt/$device"
   fi
}


# If 0 devices -- no action possible, exit
if [[ $len -eq 0 ]] ; then
   red " ◆ " ; echo "No devices found"
   exit 1
# If 1 devices -- no choice required, automound
elif [[ $len -eq 1 ]] ; then
   green " ◆ " ; echo "One device found (${options[0]}) -- mounting"
   mount_device ${options[0]}
# If 2+ devices -- prompt for user input
else
   green " ◆ " ; echo -e "Select:"
   PS3="Choose by <number>: "
   select device in "${options[@]}" ; do
      mount_device $device
   done
fi


if [[ $(which xclip) ]] ; then
   echo "cd /mnt/$device ; ls" | xclip -i -selection c
fi
